$('.overlay-inner').find('form').after('<a href="#" class="overlay-hide"><span>Hide window</span></a>'); // Insert hide-link for overlays
$('.button-search').remove(); // Remove search button since instant search is used
$('.main-main-in').prepend('<div id="js-searchcontainer"></div>'); // Container for search is needed

// Remove focusable for overlays, if not visible. Also reset focusable for all links on site.
var removeFocus = function() {
	$('a').removeAttr('tabindex');
	$('.noFocus').find('a, input, button, textarea, h3').attr('tabindex', '-1');
}

// Set focusable for overlays, if they become visible. Also remove focusable for all links, so that focus stays within overlay.
var setFocus = function(name) {
	$('a').attr('tabindex', '-1');
	$(name).find('a, input, button, textarea, h3').removeAttr('tabindex');
}

// Focus input field if search-overlay opens, focus h3 heading if contact-overlay opens
var setActive = function(name) {
	if(name == "#overlay-search") {
		$(name).find("input").focus();
	} else if(name == "#overlay-contact") {
		$(name).find("h3").attr('tabindex', '0').focus();
	}
}

// Hide overlay
var hideOverlay = function() {
	var hash = window.location.hash;
	window.location.hash = "";
	$('a[href=' + hash + ']').focus();
	$('.main-header-nav-item').removeClass('selected');
	removeFocus();
	if(hash == "#overlay-search" && getcount('search') == 0) { // If search-overlay is closed when there were no tips found
		$('#js-searchinput').val(''); // Then empty the input field
		$('#js-searchcount').remove(); // ... remove the search-indicator
		$('.main-main-in').find('article').removeClass('js-hidden'); 
		setTimeout(function(){// Show the tips and loadmore-link again which were present before the search - but delay it, so tat transition can be seen
			$('.main-main-in').find('article').removeClass('js-faded'); 
		},300); // Set timeout so that removal of opacity can actually be seen
	} else if(hash == "#overlay-contact") {
		$('input, textarea').val('');
		$('#js-contactmessage').remove();
		$('input, textarea').removeClass('user-success');
	}
}

removeFocus();

// If page is loaded with a hash-tag
var hash = window.location.hash;
if(hash != "") { // If overlay is active
	$('.main-header-nav-item').find('a[href=' + hash + ']').parent().addClass("selected"); // Select link in naviation
	setFocus(hash); 
	setActive(hash);
}

$('.main-header-nav-item').on('click', 'a', function(e) { // If nav-link is clicked
	var link = $(this).attr('href'),
		hash = window.location.hash;
	if(link == hash) { // If selected link and hashtag are the same (that means the same nav-link is pressed again and the overlay should disappear)
		hideOverlay();
		e.preventDefault(); // Prevent default behavior of link
	} else { // If different link than selected is clicked
		removeFocus(); // First remove focusable for all overlays
		setFocus(link); // Then add for opened overlay

		$(this)
			.parent().addClass('selected') // select link
			.siblings().removeClass('selected'); // remove selected state for all other nav-links

		setActive(link);
	}
});

$(document).keyup(function(e) { // overlay can be hidden with ESC key
    if(e.which == 27) {
    	hideOverlay();
    	if($('.tip-menu').length > 0) hideMenu();
    }
});

$('.overlay').on('click', '.overlay-hide', function() { // Hide overlay with close-button
	hideOverlay();
});

// Change form text according to selected radio button
$('.form-row-radio-item').find('label').on('click', function() {
	var theFor = $(this).attr('for');
    if (theFor == "send-sug") {
    	$('.overlay-contact').find('[for=msg]').text('Your tip')
	    .end()
	    .find('.overlay-contact-hint').fadeIn();
    } else if (theFor == "send-msg") {
    	 $('.overlay-contact').find('[for=msg]').text('Your message')
	    .end()
	    .find('.overlay-contact-hint').fadeOut();
    }
});

// Process contact form with Ajax
$("#js-overlay-contact-form").submit(function(e){ // Submits form only if all fields are valid
	e.preventDefault();
	$.post("process.php",
		{
			event: 'email',
			contacttype: $(".overlay-contact").find("[name=contact-type]:checked").val(),
			name: $('.overlay-contact').find('[name=name]').val(),
			email: $('.overlay-contact').find('[name=email]').val(),
			msg: $('.overlay-contact').find('[name=msg]').val()
		},
		function(data){
			// Success
			$(".overlay-contact").find('form').prepend('<p class="message message-dark message-success" id="js-contactmessage">' + data + '</p>');
			$("html, body").animate({ scrollTop: 0 }, "slow");
		}
	).error(function() {
		$(".overlay-contact").find('form').prepend('<p class="message message-dark message-error" id="js-contactmessage">An error has occured. Please try again.</p>');
	});
});

// Get number of tips in DB ... 
var getcount = function(type) {
	if (type == 'tips') var theEvent = "tipscount"; // Total number of tips
	if (type == 'search') var theEvent = "searchcount"; // Number of tips with given search term
	var returnValue;
   	$.ajax({
        type: "POST",
        url: "process.php",
        async: false, // Needs to be set
        data: {
			event: theEvent,
			searchterm: $('[name=searchterm]').val()
		},
        success: function(data){
        	returnValue = data;
        }
    });	
    return returnValue;
}

// Load more tips
var startTips = 10,
	countTips = 10;
var getTips = function(getThis) {
	$.post("process.php",
		{
			event: 'loadmore',
			start: startTips, // From which tip in DB to start
			count: countTips // How many tips to get with one click on "loadmore"
		},
		function(data){
			// Success
			$(getThis).before(data); // Paste fetched tips from DB before loadmore-link
			setTimeout(function(){ // Fade in new tips, but delay it, so that transition can be seen
				$('.js-faded').removeClass('js-faded');
			},300); // Set timeout so that removal of opacity can actually be seen
			$(getThis).removeClass('is-active'); // Stop loadmore-link from animating
			startTips = startTips + countTips; // Increase to know which tip from DB to get next 
			var tipsCount = getcount('tips'); // Get number of tips in DB from above function
			if (startTips >= tipsCount) $('.loadmore').hide(); // Hide loadmore-link if there are no more tips available in DB
		}
	).error(function() {
		$(getThis).before('<p class="message message-error">An error has occured. Please try again.</p>');
	});
}

// Delay loading of new posts so that user can see, that something happens
$("#js-loadmore").on('click',function(e){ 
	var thisNow = $(this); // Store this in variable
	$(thisNow).addClass('is-active'); // Animates the loadmore-link
	setTimeout(function(){
		getTips(thisNow);
	},1000); // Above function is only called after 1 sec
	e.preventDefault();
});

// Search tips with Ajax
var searchTips = function() {
	// $('#js-searchcontainer').find('img').remove(); // Remove images so that they don't get screwed up
	$.post("process.php",
		{
			event: 'search',
			searchterm: $('[name=searchterm]').val() // Content of search field
		},
		function(data){
			$('.main-main-in > article, .main-main-in #js-loadmore').addClass('js-faded js-hidden'); // First hide current shown tips and loadmore link (so that they can later be shown again, if search overlay is closed)
			$('.main-main-in').find('#js-searchcontainer').empty().prepend(data); // Paste found tips into emptied container
			setTimeout(function(){
				$('#js-searchcontainer').find('.js-faded').removeClass('js-faded'); // Fade in new tips
			},300); // Set timeout so that removal of opacity can actually be seen
			setFocus('#overlay-search'); // Set tabindex for search-overlay so that only this one can be accessed via keyboard
		}
	).error(function() {
		// $(getThis).before('<p class="message message-error">An error has occured. Please try again.</p>');
	});
}

// On keyup perform above function for tip-search
$('#js-searchinput').on('keyup', function() {
	if ($(this).val().length > 2) {
		var searchCount = getcount('search'); // Check how many tips are found with above function
		if(searchCount > startTips) searchCount = startTips + "+"; // If too many tips are found, append "+"
		if($('#js-searchcount').length == 1) {
			$('#js-searchcount').html("<b>Number of tips found:</b> " + searchCount); // If count-indicator is already present, just update its content
		} else {
			$('.overlay-search').find('.form-row').append('<span class="overlay-search-count" id="js-searchcount" tabindex="0"><b>Number of tips found:</b> ' + searchCount + '</span>'); // Else - if something is entered into the input first - append the whole element
		}
	    searchTips();
	}
});

$("#js-overlay-search-form").submit(function(e){ // Prevent that pressing enter submits form
	e.preventDefault();
});

var hideMenu = function() { // Hide title menu
	$('.tip-menu').addClass('is-hidden');
	setTimeout(function(){
		$('.tip-menu').remove();
	},300);
	clickedTitle.focus();
	removeFocus();
}

$('.tip-title').on('click', '> a', function(e) { // Show menu on click on title
	clickedTitle = $(this);
	console.log(clickedTitle);
    if($('.tip-menu').length > 0) { // If menu is already there, hide it
    	hideMenu();
    }
    else { // If menu is not yet there
    	$('a').attr('tabindex', '-1');
    	var text = $(this).parents('.tip-title').find('> a').text(); // Get text of tip
    	var link = $(this).parents('.tip-title').find('> a').attr('href'); // Get text of tip
    	link = "sketchtips.info/?tip=" + link.substr(5); // ...
    	
    	$(this).parent().append('<ul class="tip-menu is-hidden"><li class="tip-menu-twit"><a href="#">Tweet this tip</a></li><li class="tip-menu-comm"><a href="#">Add comment</a></li><li class="tip-menu-link">Tip link: <input type="text" class="is-hidden"/></li></ul>'); // Construct and add menu
    	setTimeout(function(){
			$('.tip-menu').removeClass('is-hidden'); // Remove class with a timeout, so that it's faded in (same as transition in CSS)
			$('.tip-menu-twit a').focus();
		},300); 

    	$(this).parent().find('input').val(link).select().on('click', function() { // If click on input field (where URL link is shown), select its content
    	    $(this).select();
    	});

    	$('.tip-title').on('click', '.tip-menu a', function(e) { // If on menu links is clicked
    		if ($(this).parent().hasClass('tip-menu-twit')) { // If clicked on Twitter link
    			window.location.href = "http://twitter.com/home/?status=Check out this Sketch tip at sketchtips.info: '" + text + "' (" + link + ")";
    		}
    		if ($(this).parent().hasClass('tip-menu-comm')) { // If clicked on Comment link
    			window.location.href = "http://" + link + "#disqus_thread";
    		}
    	});
    }
    e.preventDefault();
});